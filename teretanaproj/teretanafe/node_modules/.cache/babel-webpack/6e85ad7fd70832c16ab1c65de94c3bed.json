{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/local/lekarife/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/user/Documents/local/lekarife/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"/home/user/Documents/local/lekarife/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/user/Documents/local/lekarife/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/user/Documents/local/lekarife/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/user/Documents/local/lekarife/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/local/lekarife/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { FocusMonitor, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nvar _c0 = [\"mat-menu-item\", \"\"];\n\nfunction MatMenuItem__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 2);\n    ɵngcc0.ɵɵelement(1, \"polygon\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c1 = [\"*\"];\n\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1._handleKeydown($event);\n    })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.closed.emit(\"click\");\n    })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4._onAnimationStart($event);\n    })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5._onAnimationDone($event);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n  }\n}\n\nvar matMenuAnimations = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [state('void', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1)'\n  }))), transition('* => void', animate('100ms 25ms linear', style({\n    opacity: 0\n  })))]),\n\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [// TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', style({\n    opacity: 1\n  })), transition('void => *', [style({\n    opacity: 0\n  }), animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\n\nvar fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\n\nvar transformMenu = matMenuAnimations.transformMenu;\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nvar MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\n\nvar MatMenuContent = /*#__PURE__*/function () {\n  function MatMenuContent(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n    _classCallCheck(this, MatMenuContent);\n\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Emits when the menu content has been attached. */\n\n    this._attached = new Subject();\n  }\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n\n\n  _createClass(MatMenuContent, [{\n    key: \"attach\",\n    value: function attach() {\n      var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this._portal) {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n      }\n\n      this.detach();\n\n      if (!this._outlet) {\n        this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n      }\n\n      var element = this._template.elementRef.nativeElement; // Because we support opening the same menu from different triggers (which in turn have their\n      // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n      // risk it staying attached to a pane that's no longer in the DOM.\n\n      element.parentNode.insertBefore(this._outlet.outletElement, element); // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n      // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n      // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n      // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n      // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n      // @breaking-change 9.0.0 Make change detector ref required\n\n      if (this._changeDetectorRef) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._portal.attach(this._outlet, context);\n\n      this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      if (this._portal.isAttached) {\n        this._portal.detach();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._outlet) {\n        this._outlet.dispose();\n      }\n    }\n  }]);\n\n  return MatMenuContent;\n}();\n\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) {\n  return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatMenuContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuContent,\n  selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_MENU_CONTENT,\n    useExisting: MatMenuContent\n  }])]\n});\n\nMatMenuContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ApplicationRef\n  }, {\n    type: Injector\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]',\n      providers: [{\n        provide: MAT_MENU_CONTENT,\n        useExisting: MatMenuContent\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\n\n\nfunction throwMatMenuMissingError() {\n  throw Error(\"matMenuTriggerFor: must pass in an mat-menu instance.\\n\\n    Example:\\n      <mat-menu #menu=\\\"matMenu\\\"></mat-menu>\\n      <button [matMenuTriggerFor]=\\\"menu\\\"></button>\");\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\n\n\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(\"xPosition value must be either 'before' or after'.\\n      Example: <mat-menu xPosition=\\\"before\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\n\n\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(\"yPosition value must be either 'above' or below'.\\n      Example: <mat-menu yPosition=\\\"above\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\n\n\nfunction throwMatMenuRecursiveError() {\n  throw Error(\"matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is \" + \"not a parent of the trigger or move the trigger outside of the menu.\");\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\n\n\nvar MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n\n/** @docs-private */\n\nvar _MatMenuItemBase = mixinDisableRipple(mixinDisabled( /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  return _class;\n}()));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\n\n\nvar MatMenuItem = /*#__PURE__*/function (_MatMenuItemBase2) {\n  _inherits(MatMenuItem, _MatMenuItemBase2);\n\n  var _super = _createSuper(MatMenuItem);\n\n  function MatMenuItem(_elementRef,\n  /**\n   * @deprecated `_document` parameter is no longer being used and will be removed.\n   * @breaking-change 12.0.0\n   */\n  _document, _focusMonitor, _parentMenu,\n  /**\n   * @deprecated `_changeDetectorRef` to become a required parameter.\n   * @breaking-change 14.0.0\n   */\n  _changeDetectorRef) {\n    var _this;\n\n    _classCallCheck(this, MatMenuItem);\n\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    _this = _super.call(this);\n    _this._elementRef = _elementRef;\n    _this._focusMonitor = _focusMonitor;\n    _this._parentMenu = _parentMenu;\n    _this._changeDetectorRef = _changeDetectorRef;\n    /** ARIA role for the menu item. */\n\n    _this.role = 'menuitem';\n    /** Stream that emits when the menu item is hovered. */\n\n    _this._hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n\n    _this._focused = new Subject();\n    /** Whether the menu item is highlighted. */\n\n    _this._highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n\n    _this._triggersSubmenu = false;\n\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n  /** Focuses the menu item. */\n\n\n  _createClass(MatMenuItem, [{\n    key: \"focus\",\n    value: function focus(origin, options) {\n      if (this._focusMonitor && origin) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n      } else {\n        this._getHostElement().focus(options);\n      }\n\n      this._focused.next(this);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this._focusMonitor) {\n        // Start monitoring the element so it gets the appropriate focused classes. We want\n        // to show the focus style for menu items only when the focus was not caused by a\n        // mouse or touch interaction.\n        this._focusMonitor.monitor(this._elementRef, false);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._focusMonitor) {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n      }\n\n      if (this._parentMenu && this._parentMenu.removeItem) {\n        this._parentMenu.removeItem(this);\n      }\n\n      this._hovered.complete();\n\n      this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n\n  }, {\n    key: \"_checkDisabled\",\n    value: function _checkDisabled(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n\n  }, {\n    key: \"_handleMouseEnter\",\n    value: function _handleMouseEnter() {\n      this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      var _a, _b;\n\n      var clone = this._elementRef.nativeElement.cloneNode(true);\n\n      var icons = clone.querySelectorAll('mat-icon, .material-icons'); // Strip away icons so they don't show up in the text.\n\n      for (var i = 0; i < icons.length; i++) {\n        var icon = icons[i];\n        (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n      }\n\n      return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n    }\n  }, {\n    key: \"_setHighlighted\",\n    value: function _setHighlighted(isHighlighted) {\n      var _a; // We need to mark this for check for the case where the content is coming from a\n      // `matMenuContent` whose change detection tree is at the declaration position,\n      // not the insertion position. See #23175.\n      // @breaking-change 14.0.0 Remove null check for `_changeDetectorRef`.\n\n\n      this._highlighted = isHighlighted;\n      (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n  }]);\n\n  return MatMenuItem;\n}(_MatMenuItemBase);\n\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) {\n  return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatMenuItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenuItem,\n  selectors: [[\"\", \"mat-menu-item\", \"\"]],\n  hostAttrs: [1, \"mat-focus-indicator\"],\n  hostVars: 10,\n  hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n        return ctx._checkDisabled($event);\n      })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n        return ctx._handleMouseEnter();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    role: \"role\"\n  },\n  exportAs: [\"matMenuItem\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 3,\n  consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"class\", \"mat-menu-submenu-icon\", \"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", 1, \"mat-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]],\n  template: function MatMenuItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelement(1, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(2, MatMenuItem__svg_svg_2_Template, 2, 0, \"svg\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._triggersSubmenu);\n    }\n  },\n  directives: [ɵngcc2.MatRipple, ɵngcc3.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatMenuItem.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_PANEL]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatMenuItem.propDecorators = {\n  role: [{\n    type: Input\n  }],\n  _checkDisabled: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  _handleMouseEnter: [{\n    type: HostListener,\n    args: ['mouseenter']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      inputs: ['disabled', 'disableRipple'],\n      host: {\n        '[attr.role]': 'role',\n        '[class.mat-menu-item]': 'true',\n        '[class.mat-menu-item-highlighted]': '_highlighted',\n        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.disabled]': 'disabled || null',\n        'class': 'mat-focus-indicator'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    role: [{\n      type: Input\n    }],\n\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token to be used to override the default options for `mat-menu`. */\n\n\nvar MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n\nvar menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\n\nvar _MatMenuBase = /*#__PURE__*/function () {\n  function _MatMenuBase(_elementRef, _ngZone, _defaultOptions) {\n    _classCallCheck(this, _MatMenuBase);\n\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._defaultOptions = _defaultOptions;\n    this._xPosition = this._defaultOptions.xPosition;\n    this._yPosition = this._defaultOptions.yPosition;\n    /** Only the direct descendant menu items. */\n\n    this._directDescendantItems = new QueryList();\n    /** Subscription to tab events on the menu panel */\n\n    this._tabSubscription = Subscription.EMPTY;\n    /** Config object to be passed into the menu's ngClass */\n\n    this._classList = {};\n    /** Current state of the panel animation. */\n\n    this._panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n\n    this._animationDone = new Subject();\n    /** Class or list of classes to be added to the overlay panel. */\n\n    this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n    /** Class to be added to the backdrop element. */\n\n    this.backdropClass = this._defaultOptions.backdropClass;\n    this._overlapTrigger = this._defaultOptions.overlapTrigger;\n    this._hasBackdrop = this._defaultOptions.hasBackdrop;\n    /** Event emitted when the menu is closed. */\n\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n\n    this.close = this.closed;\n    this.panelId = \"mat-menu-panel-\".concat(menuPanelUid++);\n  }\n  /** Position of the menu in the X axis. */\n\n\n  _createClass(_MatMenuBase, [{\n    key: \"xPosition\",\n    get: function get() {\n      return this._xPosition;\n    },\n    set: function set(value) {\n      if (value !== 'before' && value !== 'after' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuInvalidPositionX();\n      }\n\n      this._xPosition = value;\n      this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n\n  }, {\n    key: \"yPosition\",\n    get: function get() {\n      return this._yPosition;\n    },\n    set: function set(value) {\n      if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuInvalidPositionY();\n      }\n\n      this._yPosition = value;\n      this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n\n  }, {\n    key: \"overlapTrigger\",\n    get: function get() {\n      return this._overlapTrigger;\n    },\n    set: function set(value) {\n      this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n\n  }, {\n    key: \"hasBackdrop\",\n    get: function get() {\n      return this._hasBackdrop;\n    },\n    set: function set(value) {\n      this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n\n  }, {\n    key: \"panelClass\",\n    set: function set(classes) {\n      var _this2 = this;\n\n      var previousPanelClass = this._previousPanelClass;\n\n      if (previousPanelClass && previousPanelClass.length) {\n        previousPanelClass.split(' ').forEach(function (className) {\n          _this2._classList[className] = false;\n        });\n      }\n\n      this._previousPanelClass = classes;\n\n      if (classes && classes.length) {\n        classes.split(' ').forEach(function (className) {\n          _this2._classList[className] = true;\n        });\n        this._elementRef.nativeElement.className = '';\n      }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n\n  }, {\n    key: \"classList\",\n    get: function get() {\n      return this.panelClass;\n    },\n    set: function set(classes) {\n      this.panelClass = classes;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.setPositionClasses();\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this3 = this;\n\n      this._updateDirectDescendants();\n\n      this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd();\n      this._tabSubscription = this._keyManager.tabOut.subscribe(function () {\n        return _this3.closed.emit('tab');\n      }); // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n      // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n      // is internal and we know that it gets completed on destroy.\n\n      this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(function (items) {\n        return merge.apply(void 0, _toConsumableArray(items.map(function (item) {\n          return item._focused;\n        })));\n      })).subscribe(function (focusedItem) {\n        return _this3._keyManager.updateActiveItem(focusedItem);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._directDescendantItems.destroy();\n\n      this._tabSubscription.unsubscribe();\n\n      this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n\n  }, {\n    key: \"_hovered\",\n    value: function _hovered() {\n      // Coerce the `changes` property because Angular types it as `Observable<any>`\n      var itemChanges = this._directDescendantItems.changes;\n      return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(function (items) {\n        return merge.apply(void 0, _toConsumableArray(items.map(function (item) {\n          return item._hovered;\n        })));\n      }));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n\n  }, {\n    key: \"addItem\",\n    value: function addItem(_item) {}\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(_item) {}\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      var keyCode = event.keyCode;\n      var manager = this._keyManager;\n\n      switch (keyCode) {\n        case ESCAPE:\n          if (!hasModifierKey(event)) {\n            event.preventDefault();\n            this.closed.emit('keydown');\n          }\n\n          break;\n\n        case LEFT_ARROW:\n          if (this.parentMenu && this.direction === 'ltr') {\n            this.closed.emit('keydown');\n          }\n\n          break;\n\n        case RIGHT_ARROW:\n          if (this.parentMenu && this.direction === 'rtl') {\n            this.closed.emit('keydown');\n          }\n\n          break;\n\n        default:\n          if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n            manager.setFocusOrigin('keyboard');\n          }\n\n          manager.onKeydown(event);\n      }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n\n  }, {\n    key: \"focusFirstItem\",\n    value: function focusFirstItem() {\n      var _this4 = this;\n\n      var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'program';\n\n      // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n      if (this.lazyContent) {\n        this._ngZone.onStable.pipe(take(1)).subscribe(function () {\n          return _this4._focusFirstItem(origin);\n        });\n      } else {\n        this._focusFirstItem(origin);\n      }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n\n  }, {\n    key: \"_focusFirstItem\",\n    value: function _focusFirstItem(origin) {\n      var manager = this._keyManager;\n      manager.setFocusOrigin(origin).setFirstItemActive(); // If there's no active item at this point, it means that all the items are disabled.\n      // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n      // give _some_ feedback to screen readers.\n\n      if (!manager.activeItem && this._directDescendantItems.length) {\n        var element = this._directDescendantItems.first._getHostElement().parentElement; // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n        // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n        // because the panel is inside an `ng-template`. We work around it by starting from one of\n        // the items and walking up the DOM.\n\n\n        while (element) {\n          if (element.getAttribute('role') === 'menu') {\n            element.focus();\n            break;\n          } else {\n            element = element.parentElement;\n          }\n        }\n      }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n\n  }, {\n    key: \"resetActiveItem\",\n    value: function resetActiveItem() {\n      this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n\n  }, {\n    key: \"setElevation\",\n    value: function setElevation(depth) {\n      var _this5 = this;\n\n      // The elevation starts at the base and increases by one for each level.\n      // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n      var elevation = Math.min(this._baseElevation + depth, 24);\n      var newElevation = \"\".concat(this._elevationPrefix).concat(elevation);\n      var customElevation = Object.keys(this._classList).find(function (className) {\n        return className.startsWith(_this5._elevationPrefix);\n      });\n\n      if (!customElevation || customElevation === this._previousElevation) {\n        if (this._previousElevation) {\n          this._classList[this._previousElevation] = false;\n        }\n\n        this._classList[newElevation] = true;\n        this._previousElevation = newElevation;\n      }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n\n  }, {\n    key: \"setPositionClasses\",\n    value: function setPositionClasses() {\n      var posX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.xPosition;\n      var posY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.yPosition;\n      var classes = this._classList;\n      classes['mat-menu-before'] = posX === 'before';\n      classes['mat-menu-after'] = posX === 'after';\n      classes['mat-menu-above'] = posY === 'above';\n      classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n\n  }, {\n    key: \"_startAnimation\",\n    value: function _startAnimation() {\n      // @breaking-change 8.0.0 Combine with _resetAnimation.\n      this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n\n  }, {\n    key: \"_resetAnimation\",\n    value: function _resetAnimation() {\n      // @breaking-change 8.0.0 Combine with _startAnimation.\n      this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n\n  }, {\n    key: \"_onAnimationDone\",\n    value: function _onAnimationDone(event) {\n      this._animationDone.next(event);\n\n      this._isAnimating = false;\n    }\n  }, {\n    key: \"_onAnimationStart\",\n    value: function _onAnimationStart(event) {\n      this._isAnimating = true; // Scroll the content element to the top as soon as the animation starts. This is necessary,\n      // because we move focus to the first item while it's still being animated, which can throw\n      // the browser off when it determines the scroll position. Alternatively we can move focus\n      // when the animation is done, however moving focus asynchronously will interrupt screen\n      // readers which are in the process of reading out the menu already. We take the `element`\n      // from the `event` since we can't use a `ViewChild` to access the pane.\n\n      if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n        event.element.scrollTop = 0;\n      }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n\n  }, {\n    key: \"_updateDirectDescendants\",\n    value: function _updateDirectDescendants() {\n      var _this6 = this;\n\n      this._allItems.changes.pipe(startWith(this._allItems)).subscribe(function (items) {\n        _this6._directDescendantItems.reset(items.filter(function (item) {\n          return item._parentMenu === _this6;\n        }));\n\n        _this6._directDescendantItems.notifyOnChanges();\n      });\n    }\n  }]);\n\n  return _MatMenuBase;\n}();\n\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) {\n  return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\n\n_MatMenuBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: _MatMenuBase,\n  contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  viewQuery: function _MatMenuBase_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  inputs: {\n    backdropClass: \"backdropClass\",\n    xPosition: \"xPosition\",\n    yPosition: \"yPosition\",\n    overlapTrigger: \"overlapTrigger\",\n    hasBackdrop: \"hasBackdrop\",\n    panelClass: [\"class\", \"panelClass\"],\n    classList: \"classList\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"]\n  },\n  outputs: {\n    closed: \"closed\",\n    close: \"close\"\n  }\n});\n\n_MatMenuBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_DEFAULT_OPTIONS]\n    }]\n  }];\n};\n\n_MatMenuBase.propDecorators = {\n  _allItems: [{\n    type: ContentChildren,\n    args: [MatMenuItem, {\n      descendants: true\n    }]\n  }],\n  backdropClass: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }],\n  ariaDescribedby: [{\n    type: Input,\n    args: ['aria-describedby']\n  }],\n  xPosition: [{\n    type: Input\n  }],\n  yPosition: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }],\n  items: [{\n    type: ContentChildren,\n    args: [MatMenuItem, {\n      descendants: false\n    }]\n  }],\n  lazyContent: [{\n    type: ContentChild,\n    args: [MAT_MENU_CONTENT]\n  }],\n  overlapTrigger: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  panelClass: [{\n    type: Input,\n    args: ['class']\n  }],\n  classList: [{\n    type: Input\n  }],\n  closed: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, {\n    backdropClass: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    overlapTrigger: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    classList: [{\n      type: Input\n    }],\n    _allItems: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: true\n      }]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: false\n      }]\n    }],\n    lazyContent: [{\n      type: ContentChild,\n      args: [MAT_MENU_CONTENT]\n    }]\n  });\n})();\n/** @docs-public MatMenu */\n\n\nvar MatMenu = /*#__PURE__*/function (_MatMenuBase2) {\n  _inherits(MatMenu, _MatMenuBase2);\n\n  var _super2 = _createSuper(MatMenu);\n\n  function MatMenu(elementRef, ngZone, defaultOptions) {\n    var _this7;\n\n    _classCallCheck(this, MatMenu);\n\n    _this7 = _super2.call(this, elementRef, ngZone, defaultOptions);\n    _this7._elevationPrefix = 'mat-elevation-z';\n    _this7._baseElevation = 4;\n    return _this7;\n  }\n\n  return MatMenu;\n}(_MatMenuBase);\n\nMatMenu.ɵfac = function MatMenu_Factory(t) {\n  return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\n\nMatMenu.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenu,\n  selectors: [[\"mat-menu\"]],\n  hostVars: 3,\n  hostBindings: function MatMenu_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n    }\n  },\n  exportAs: [\"matMenu\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_MENU_PANEL,\n    useExisting: MatMenu\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]],\n  template: function MatMenu_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    }\n  },\n  directives: [ɵngcc3.NgClass],\n  styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n  },\n  changeDetection: 0\n});\n\nMatMenu.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_DEFAULT_OPTIONS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      host: {\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null'\n      },\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }],\n      styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that determines the scroll handling while the menu is open. */\n\n\nvar MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\n\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return function () {\n    return overlay.scrollStrategies.reposition();\n  };\n}\n/** @docs-private */\n\n\nvar MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** Default top padding of the menu panel. */\n\nvar MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\n\nvar passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n}); // TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n\n/** Directive applied to an element that should trigger a `mat-menu`. */\n\nvar MatMenuTrigger = /*#__PURE__*/function () {\n  function MatMenuTrigger(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n  // tslint:disable-next-line: lightweight-tokens\n  _menuItemInstance, _dir, // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n  // @breaking-change 8.0.0\n  _focusMonitor) {\n    var _this8 = this;\n\n    _classCallCheck(this, MatMenuTrigger);\n\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closingActionsSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    this._menuCloseSubscription = Subscription.EMPTY;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n\n    this._handleTouchStart = function (event) {\n      if (!isFakeTouchstartFromScreenReader(event)) {\n        _this8._openedBy = 'touch';\n      }\n    }; // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n\n\n    this._openedBy = undefined;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n\n    this.restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onMenuClose = this.menuClosed;\n    this._scrollStrategy = scrollStrategy;\n    this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n  }\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n\n\n  _createClass(MatMenuTrigger, [{\n    key: \"_deprecatedMatMenuTriggerFor\",\n    get: function get() {\n      return this.menu;\n    },\n    set: function set(v) {\n      this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n\n  }, {\n    key: \"menu\",\n    get: function get() {\n      return this._menu;\n    },\n    set: function set(menu) {\n      var _this9 = this;\n\n      if (menu === this._menu) {\n        return;\n      }\n\n      this._menu = menu;\n\n      this._menuCloseSubscription.unsubscribe();\n\n      if (menu) {\n        if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatMenuRecursiveError();\n        }\n\n        this._menuCloseSubscription = menu.close.subscribe(function (reason) {\n          _this9._destroyMenu(reason); // If a click closed the menu, we should close the entire chain of nested menus.\n\n\n          if ((reason === 'click' || reason === 'tab') && _this9._parentMaterialMenu) {\n            _this9._parentMaterialMenu.closed.emit(reason);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._checkMenu();\n\n      this._handleHover();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n\n        this._overlayRef = null;\n      }\n\n      this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n\n      this._menuCloseSubscription.unsubscribe();\n\n      this._closingActionsSubscription.unsubscribe();\n\n      this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n\n  }, {\n    key: \"menuOpen\",\n    get: function get() {\n      return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n\n  }, {\n    key: \"triggersSubmenu\",\n    value: function triggersSubmenu() {\n      return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n\n  }, {\n    key: \"openMenu\",\n    value: function openMenu() {\n      var _this10 = this;\n\n      if (this._menuOpen) {\n        return;\n      }\n\n      this._checkMenu();\n\n      var overlayRef = this._createOverlay();\n\n      var overlayConfig = overlayRef.getConfig();\n\n      this._setPosition(overlayConfig.positionStrategy);\n\n      overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n      overlayRef.attach(this._getPortal());\n\n      if (this.menu.lazyContent) {\n        this.menu.lazyContent.attach(this.menuData);\n      }\n\n      this._closingActionsSubscription = this._menuClosingActions().subscribe(function () {\n        return _this10.closeMenu();\n      });\n\n      this._initMenu();\n\n      if (this.menu instanceof _MatMenuBase) {\n        this.menu._startAnimation();\n      }\n    }\n    /** Closes the menu. */\n\n  }, {\n    key: \"closeMenu\",\n    value: function closeMenu() {\n      this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus(origin, options) {\n      if (this._focusMonitor && origin) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n      } else {\n        this._element.nativeElement.focus(options);\n      }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var _a;\n\n      (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n\n  }, {\n    key: \"_destroyMenu\",\n    value: function _destroyMenu(reason) {\n      var _this11 = this;\n\n      if (!this._overlayRef || !this.menuOpen) {\n        return;\n      }\n\n      var menu = this.menu;\n\n      this._closingActionsSubscription.unsubscribe();\n\n      this._overlayRef.detach(); // Always restore focus if the user is navigating using the keyboard or the menu was opened\n      // programmatically. We don't restore for non-root triggers, because it can prevent focus\n      // from making it back to the root trigger when closing a long chain of menus by clicking\n      // on the backdrop.\n\n\n      if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n        this.focus(this._openedBy);\n      }\n\n      this._openedBy = undefined;\n\n      if (menu instanceof _MatMenuBase) {\n        menu._resetAnimation();\n\n        if (menu.lazyContent) {\n          // Wait for the exit animation to finish before detaching the content.\n          menu._animationDone.pipe(filter(function (event) {\n            return event.toState === 'void';\n          }), take(1), // Interrupt if the content got re-attached.\n          takeUntil(menu.lazyContent._attached)).subscribe({\n            next: function next() {\n              return menu.lazyContent.detach();\n            },\n            // No matter whether the content got re-attached, reset the menu.\n            complete: function complete() {\n              return _this11._setIsMenuOpen(false);\n            }\n          });\n        } else {\n          this._setIsMenuOpen(false);\n        }\n      } else {\n        this._setIsMenuOpen(false);\n\n        if (menu.lazyContent) {\n          menu.lazyContent.detach();\n        }\n      }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n\n  }, {\n    key: \"_initMenu\",\n    value: function _initMenu() {\n      this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n      this.menu.direction = this.dir;\n\n      this._setMenuElevation();\n\n      this.menu.focusFirstItem(this._openedBy || 'program');\n\n      this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n\n  }, {\n    key: \"_setMenuElevation\",\n    value: function _setMenuElevation() {\n      if (this.menu.setElevation) {\n        var depth = 0;\n        var parentMenu = this.menu.parentMenu;\n\n        while (parentMenu) {\n          depth++;\n          parentMenu = parentMenu.parentMenu;\n        }\n\n        this.menu.setElevation(depth);\n      }\n    } // set state rather than toggle to support triggers sharing a menu\n\n  }, {\n    key: \"_setIsMenuOpen\",\n    value: function _setIsMenuOpen(isOpen) {\n      this._menuOpen = isOpen;\n      this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n      if (this.triggersSubmenu()) {\n        this._menuItemInstance._setHighlighted(isOpen);\n      }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n\n  }, {\n    key: \"_checkMenu\",\n    value: function _checkMenu() {\n      if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuMissingError();\n      }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n\n  }, {\n    key: \"_createOverlay\",\n    value: function _createOverlay() {\n      if (!this._overlayRef) {\n        var config = this._getOverlayConfig();\n\n        this._subscribeToPositions(config.positionStrategy);\n\n        this._overlayRef = this._overlay.create(config); // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n        // Ideally we'd also have our keyboard event logic in here, however doing so will\n        // break anybody that may have implemented the `MatMenuPanel` themselves.\n\n        this._overlayRef.keydownEvents().subscribe();\n      }\n\n      return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n\n  }, {\n    key: \"_getOverlayConfig\",\n    value: function _getOverlayConfig() {\n      return new OverlayConfig({\n        positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n        backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n        panelClass: this.menu.overlayPanelClass,\n        scrollStrategy: this._scrollStrategy(),\n        direction: this._dir\n      });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n\n  }, {\n    key: \"_subscribeToPositions\",\n    value: function _subscribeToPositions(position) {\n      var _this12 = this;\n\n      if (this.menu.setPositionClasses) {\n        position.positionChanges.subscribe(function (change) {\n          var posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n          var posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n          _this12.menu.setPositionClasses(posX, posY);\n        });\n      }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n\n  }, {\n    key: \"_setPosition\",\n    value: function _setPosition(positionStrategy) {\n      var _ref = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'],\n          _ref2 = _slicedToArray(_ref, 2),\n          originX = _ref2[0],\n          originFallbackX = _ref2[1];\n\n      var _ref3 = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'],\n          _ref4 = _slicedToArray(_ref3, 2),\n          overlayY = _ref4[0],\n          overlayFallbackY = _ref4[1];\n\n      var originY = overlayY,\n          originFallbackY = overlayFallbackY;\n      var overlayX = originX,\n          overlayFallbackX = originFallbackX;\n      var offsetY = 0;\n\n      if (this.triggersSubmenu()) {\n        // When the menu is a sub-menu, it should always align itself\n        // to the edges of the trigger, instead of overlapping it.\n        overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n        originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n        offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n      } else if (!this.menu.overlapTrigger) {\n        originY = overlayY === 'top' ? 'bottom' : 'top';\n        originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n      }\n\n      positionStrategy.withPositions([{\n        originX: originX,\n        originY: originY,\n        overlayX: overlayX,\n        overlayY: overlayY,\n        offsetY: offsetY\n      }, {\n        originX: originFallbackX,\n        originY: originY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayY,\n        offsetY: offsetY\n      }, {\n        originX: originX,\n        originY: originFallbackY,\n        overlayX: overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }, {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n\n  }, {\n    key: \"_menuClosingActions\",\n    value: function _menuClosingActions() {\n      var _this13 = this;\n\n      var backdrop = this._overlayRef.backdropClick();\n\n      var detachments = this._overlayRef.detachments();\n\n      var parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n      var hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(function (active) {\n        return active !== _this13._menuItemInstance;\n      }), filter(function () {\n        return _this13._menuOpen;\n      })) : of();\n      return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n\n  }, {\n    key: \"_handleMousedown\",\n    value: function _handleMousedown(event) {\n      if (!isFakeMousedownFromScreenReader(event)) {\n        // Since right or middle button clicks won't trigger the `click` event,\n        // we shouldn't consider the menu as opened by mouse in those cases.\n        this._openedBy = event.button === 0 ? 'mouse' : undefined; // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n        // we should prevent focus from moving onto it via click to avoid the\n        // highlight from lingering on the menu item.\n\n        if (this.triggersSubmenu()) {\n          event.preventDefault();\n        }\n      }\n    }\n    /** Handles key presses on the trigger. */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      var keyCode = event.keyCode; // Pressing enter on the trigger will trigger the click handler later.\n\n      if (keyCode === ENTER || keyCode === SPACE) {\n        this._openedBy = 'keyboard';\n      }\n\n      if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n        this._openedBy = 'keyboard';\n        this.openMenu();\n      }\n    }\n    /** Handles click events on the trigger. */\n\n  }, {\n    key: \"_handleClick\",\n    value: function _handleClick(event) {\n      if (this.triggersSubmenu()) {\n        // Stop event propagation to avoid closing the parent menu.\n        event.stopPropagation();\n        this.openMenu();\n      } else {\n        this.toggleMenu();\n      }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n\n  }, {\n    key: \"_handleHover\",\n    value: function _handleHover() {\n      var _this14 = this;\n\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n        return;\n      }\n\n      this._hoverSubscription = this._parentMaterialMenu._hovered() // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n      // with different data and triggers), we have to delay it by a tick to ensure that\n      // it won't be closed immediately after it is opened.\n      .pipe(filter(function (active) {\n        return active === _this14._menuItemInstance && !active.disabled;\n      }), delay(0, asapScheduler)).subscribe(function () {\n        _this14._openedBy = 'mouse'; // If the same menu is used between multiple triggers, it might still be animating\n        // while the new trigger tries to re-open it. Wait for the animation to finish\n        // before doing so. Also interrupt if the user moves to another item.\n\n        if (_this14.menu instanceof _MatMenuBase && _this14.menu._isAnimating) {\n          // We need the `delay(0)` here in order to avoid\n          // 'changed after checked' errors in some cases. See #12194.\n          _this14.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(_this14._parentMaterialMenu._hovered())).subscribe(function () {\n            return _this14.openMenu();\n          });\n        } else {\n          _this14.openMenu();\n        }\n      });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n\n  }, {\n    key: \"_getPortal\",\n    value: function _getPortal() {\n      // Note that we can avoid this check by keeping the portal on the menu panel.\n      // While it would be cleaner, we'd have to introduce another required method on\n      // `MatMenuPanel`, making it harder to consume.\n      if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n        this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      }\n\n      return this._portal;\n    }\n  }]);\n\n  return MatMenuTrigger;\n}();\n\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) {\n  return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor));\n};\n\nMatMenuTrigger.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuTrigger,\n  selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"],\n  hostVars: 2,\n  hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n        return ctx._handleMousedown($event);\n      })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n        return ctx._handleClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    }\n  },\n  inputs: {\n    restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"],\n    _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n    menu: [\"matMenuTriggerFor\", \"menu\"],\n    menuData: [\"matMenuTriggerData\", \"menuData\"]\n  },\n  outputs: {\n    menuOpened: \"menuOpened\",\n    onMenuOpen: \"onMenuOpen\",\n    menuClosed: \"menuClosed\",\n    onMenuClose: \"onMenuClose\"\n  },\n  exportAs: [\"matMenuTrigger\"]\n});\n\nMatMenuTrigger.ctorParameters = function () {\n  return [{\n    type: Overlay\n  }, {\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_MENU_PANEL]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: MatMenuItem,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: FocusMonitor\n  }];\n};\n\nMatMenuTrigger.propDecorators = {\n  _deprecatedMatMenuTriggerFor: [{\n    type: Input,\n    args: ['mat-menu-trigger-for']\n  }],\n  menu: [{\n    type: Input,\n    args: ['matMenuTriggerFor']\n  }],\n  menuData: [{\n    type: Input,\n    args: ['matMenuTriggerData']\n  }],\n  restoreFocus: [{\n    type: Input,\n    args: ['matMenuTriggerRestoreFocus']\n  }],\n  menuOpened: [{\n    type: Output\n  }],\n  onMenuOpen: [{\n    type: Output\n  }],\n  menuClosed: [{\n    type: Output\n  }],\n  onMenuClose: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\",\n      host: {\n        'class': 'mat-menu-trigger',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'menuOpen || null',\n        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick($event)'\n      },\n      exportAs: 'matMenuTrigger'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: MatMenuItem,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: ɵngcc5.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }];\n  }, {\n    restoreFocus: [{\n      type: Input,\n      args: ['matMenuTriggerRestoreFocus']\n    }],\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }],\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n\n\nvar _MatMenuDirectivesModule = function _MatMenuDirectivesModule() {\n  _classCallCheck(this, _MatMenuDirectivesModule);\n};\n\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) {\n  return new (t || _MatMenuDirectivesModule)();\n};\n\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: _MatMenuDirectivesModule\n});\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n      declarations: [MatMenuTrigger, MatMenuContent],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, {\n    declarations: function declarations() {\n      return [MatMenuTrigger, MatMenuContent];\n    },\n    exports: function exports() {\n      return [MatMenuTrigger, MatMenuContent, MatCommonModule];\n    }\n  });\n})();\n\nvar MatMenuModule = function MatMenuModule() {\n  _classCallCheck(this, MatMenuModule);\n};\n\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) {\n  return new (t || MatMenuModule)();\n};\n\nMatMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatMenuModule\n});\nMatMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule], CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule],\n      exports: [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n      declarations: [MatMenu, MatMenuItem],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, {\n    declarations: function declarations() {\n      return [MatMenu, MatMenuItem];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule];\n    },\n    exports: function exports() {\n      return [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c }; //# sourceMappingURL=menu.js.map","map":{"version":3,"sources":["/home/user/Documents/local/lekarife/node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js"],"names":["FocusMonitor","FocusKeyManager","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","coerceBooleanProperty","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ESCAPE","hasModifierKey","ENTER","SPACE","InjectionToken","Directive","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","Inject","ChangeDetectorRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","Optional","Input","HostListener","QueryList","EventEmitter","NgZone","ContentChildren","ViewChild","ContentChild","Output","Self","NgModule","Subject","Subscription","merge","of","asapScheduler","startWith","switchMap","take","filter","takeUntil","delay","trigger","state","style","transition","animate","TemplatePortal","DomPortalOutlet","DOCUMENT","CommonModule","mixinDisableRipple","mixinDisabled","MatCommonModule","MatRippleModule","Directionality","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","CdkScrollableModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","MatMenuItem__svg_svg_2_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","_c1","MatMenu_ng_template_0_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","MatMenu_ng_template_0_Template_div_keydown_0_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","_handleKeydown","MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","emit","MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_onAnimationStart","MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ɵɵprojection","ctx_r0","ɵɵproperty","panelId","_classList","_panelAnimationState","ɵɵattribute","ariaLabel","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MAT_MENU_CONTENT","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","_attached","context","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","attach","next","isAttached","dispose","ɵfac","MatMenuContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","features","ɵɵProvidersFeature","provide","useExisting","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","selector","providers","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_elementRef","_focusMonitor","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","origin","options","focusVia","_getHostElement","focus","monitor","stopMonitoring","removeItem","complete","disabled","event","preventDefault","stopPropagation","_a","_b","clone","cloneNode","icons","querySelectorAll","i","length","icon","removeChild","textContent","trim","isHighlighted","MatMenuItem_Factory","ɵcmp","ɵɵdefineComponent","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","_checkDisabled","MatMenuItem_mouseenter_HostBindingHandler","_handleMouseEnter","_getTabIndex","toString","ɵɵclassProp","inputs","disableRipple","exportAs","ɵɵInheritDefinitionFeature","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","ɵɵprojectionDef","ɵɵtemplate","ɵɵadvance","directives","MatRipple","NgIf","encapsulation","changeDetection","propDecorators","host","OnPush","None","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","close","value","setPositionClasses","classes","previousPanelClass","_previousPanelClass","split","forEach","className","panelClass","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","tabOut","subscribe","changes","pipe","items","map","item","focusedItem","updateActiveItem","destroy","unsubscribe","itemChanges","_item","keyCode","manager","parentMenu","direction","setFocusOrigin","onKeydown","lazyContent","onStable","_focusFirstItem","setFirstItemActive","activeItem","first","parentElement","getAttribute","setActiveItem","depth","elevation","Math","min","_baseElevation","newElevation","_elevationPrefix","customElevation","Object","keys","find","startsWith","_previousElevation","posX","posY","_isAnimating","toState","activeItemIndex","scrollTop","_allItems","reset","notifyOnChanges","_MatMenuBase_Factory","contentQueries","_MatMenuBase_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","_MatMenuBase_Query","ɵɵviewQuery","templateRef","classList","outputs","descendants","MatMenu","ngZone","defaultOptions","MatMenu_Factory","MatMenu_HostBindings","MatMenu_Template","NgClass","styles","data","animation","animations","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","_parentMaterialMenu","addEventListener","triggersSubmenu","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","updatePosition","menuOpen","_resetAnimation","_setIsMenuOpen","dir","_setMenuElevation","focusFirstItem","setElevation","isOpen","_setHighlighted","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withGrowAfterOpen","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","button","toggleMenu","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","_handleMousedown","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_handleClick","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","MatMenuModule","MatMenuModule_Factory","ɵangular_material_src_material_menu_menu_a","ɵangular_material_src_material_menu_menu_b","ɵangular_material_src_material_menu_menu_c"],"mappings":"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","sourcesContent":["import { FocusMonitor, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nfunction MatMenuItem__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 2);\n    ɵngcc0.ɵɵelement(1, \"polygon\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)'\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }])] });\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]',\n                providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu, \n    /**\n     * @deprecated `_changeDetectorRef` to become a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _changeDetectorRef) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a, _b;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            const icon = icons[i];\n            (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n        }\n        return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n    }\n    _setHighlighted(isHighlighted) {\n        var _a;\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 14.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 3, vars: 3, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"class\", \"mat-menu-submenu-icon\", \"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", 1, \"mat-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(2, MatMenuItem__svg_svg_2_Template, 2, 0, \"svg\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._triggersSubmenu);\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgIf], encapsulation: 2, changeDetection: 0 });\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { role: [{\n            type: Input\n        }], \n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() { return this._xPosition; }\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() { return this._yPosition; }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() { return this._overlapTrigger; }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() { return this.panelClass; }\n    set classList(classes) { this.panelClass = classes; }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable\n                .pipe(take(1))\n                .subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MAT_MENU_CONTENT,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MAT_MENU_CONTENT]\n        }] }); })();\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\nMatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenu, selectors: [[\"mat-menu\"]], hostVars: 3, hostBindings: function MatMenu_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n    } }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\nMatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                host: {\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null'\n                },\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                ],\n                styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() { return this._menu; }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        var _a;\n        (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false)\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); };\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ], CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map"]},"metadata":{},"sourceType":"module"}