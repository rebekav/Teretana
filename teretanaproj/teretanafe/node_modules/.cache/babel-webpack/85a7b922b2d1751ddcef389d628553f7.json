{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/local/lekariproj/lekarife/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/local/lekariproj/lekarife/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/user/Documents/local/lekariproj/lekarife/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/user/Documents/local/lekariproj/lekarife/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\nvar _c0 = [\"*\"];\n\nfunction MatDrawerContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2._onBackdropClicked();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nvar _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\n\nfunction MatSidenavContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2._onBackdropClicked();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\n\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nvar _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nvar _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nvar matDrawerAnimations = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [// We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\n\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(\"A drawer was already declared for 'position=\\\"\".concat(position, \"\\\"'\"));\n}\n/** Configures whether drawers should use auto sizing by default. */\n\n\nvar MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\n\nvar MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\n\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\n\nvar MatDrawerContent = /*#__PURE__*/function (_CdkScrollable) {\n  _inherits(MatDrawerContent, _CdkScrollable);\n\n  var _super = _createSuper(MatDrawerContent);\n\n  function MatDrawerContent(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    var _this;\n\n    _classCallCheck(this, MatDrawerContent);\n\n    _this = _super.call(this, elementRef, scrollDispatcher, ngZone);\n    _this._changeDetectorRef = _changeDetectorRef;\n    _this._container = _container;\n    return _this;\n  }\n\n  _createClass(MatDrawerContent, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this._container._contentMarginChanges.subscribe(function () {\n        _this2._changeDetectorRef.markForCheck();\n      });\n    }\n  }]);\n\n  return MatDrawerContent;\n}(CdkScrollable);\n\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) {\n  return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return MatDrawerContainer;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatDrawerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContent,\n  selectors: [[\"mat-drawer-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\"],\n  hostVars: 4,\n  hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatDrawerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatDrawerContent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: MatDrawerContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return MatDrawerContainer;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return MatDrawerContainer;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\n\n\nvar MatDrawer = /*#__PURE__*/function () {\n  function MatDrawer(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n    var _this3 = this;\n\n    _classCallCheck(this, MatDrawer);\n\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._doc = _doc;\n    this._container = _container;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /** Whether the drawer is initialized. Used for disabling the initial animation. */\n\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._opened = false;\n    /** Emits whenever the drawer has started animating. */\n\n    this._animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n\n    this._animationEnd = new Subject();\n    /** Current state of the sidenav animation. */\n    // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n    // metadata is not inherited by child classes, instead the host binding data is defined in a way\n    // that can be inherited.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n\n    this._animationState = 'void';\n    /** Event emitted when the drawer open state is changed. */\n\n    this.openedChange = // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(\n    /* isAsync */\n    true);\n    /** Event emitted when the drawer has been opened. */\n\n    this._openedStream = this.openedChange.pipe(filter(function (o) {\n      return o;\n    }), map(function () {}));\n    /** Event emitted when the drawer has started opening. */\n\n    this.openedStart = this._animationStarted.pipe(filter(function (e) {\n      return e.fromState !== e.toState && e.toState.indexOf('open') === 0;\n    }), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n\n    this._closedStream = this.openedChange.pipe(filter(function (o) {\n      return !o;\n    }), map(function () {}));\n    /** Event emitted when the drawer has started closing. */\n\n    this.closedStart = this._animationStarted.pipe(filter(function (e) {\n      return e.fromState !== e.toState && e.toState === 'void';\n    }), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n\n    this._modeChanged = new Subject();\n    this.openedChange.subscribe(function (opened) {\n      if (opened) {\n        if (_this3._doc) {\n          _this3._elementFocusedBeforeDrawerWasOpened = _this3._doc.activeElement;\n        }\n\n        _this3._takeFocus();\n      } else if (_this3._isFocusWithinDrawer()) {\n        _this3._restoreFocus();\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n\n    this._ngZone.runOutsideAngular(function () {\n      fromEvent(_this3._elementRef.nativeElement, 'keydown').pipe(filter(function (event) {\n        return event.keyCode === ESCAPE && !_this3.disableClose && !hasModifierKey(event);\n      }), takeUntil(_this3._destroyed)).subscribe(function (event) {\n        return _this3._ngZone.run(function () {\n          _this3.close();\n\n          event.stopPropagation();\n          event.preventDefault();\n        });\n      });\n    }); // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n\n    this._animationEnd.pipe(distinctUntilChanged(function (x, y) {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(function (event) {\n      var fromState = event.fromState,\n          toState = event.toState;\n\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        _this3.openedChange.emit(_this3._opened);\n      }\n    });\n  }\n  /** The side that the drawer is attached to. */\n\n\n  _createClass(MatDrawer, [{\n    key: \"position\",\n    get: function get() {\n      return this._position;\n    },\n    set: function set(value) {\n      // Make sure we have a valid value.\n      value = value === 'end' ? 'end' : 'start';\n\n      if (value != this._position) {\n        this._position = value;\n        this.onPositionChanged.emit();\n      }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n\n  }, {\n    key: \"mode\",\n    get: function get() {\n      return this._mode;\n    },\n    set: function set(value) {\n      this._mode = value;\n\n      this._updateFocusTrapState();\n\n      this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n\n  }, {\n    key: \"disableClose\",\n    get: function get() {\n      return this._disableClose;\n    },\n    set: function set(value) {\n      this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n\n  }, {\n    key: \"autoFocus\",\n    get: function get() {\n      var value = this._autoFocus; // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n      // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n      // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n\n      return value == null ? this.mode !== 'side' : value;\n    },\n    set: function set(value) {\n      this._autoFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n\n  }, {\n    key: \"opened\",\n    get: function get() {\n      return this._opened;\n    },\n    set: function set(value) {\n      this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n\n  }, {\n    key: \"_takeFocus\",\n    value: function _takeFocus() {\n      var _this4 = this;\n\n      if (!this.autoFocus || !this._focusTrap) {\n        return;\n      }\n\n      this._focusTrap.focusInitialElementWhenReady().then(function (hasMovedFocus) {\n        // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n        // still works. We need to check that `focus` is a function due to Universal.\n        if (!hasMovedFocus && typeof _this4._elementRef.nativeElement.focus === 'function') {\n          _this4._elementRef.nativeElement.focus();\n        }\n      });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n\n  }, {\n    key: \"_restoreFocus\",\n    value: function _restoreFocus() {\n      if (!this.autoFocus) {\n        return;\n      } // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n\n\n      if (this._elementFocusedBeforeDrawerWasOpened) {\n        this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n\n      this._elementFocusedBeforeDrawerWasOpened = null;\n      this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n\n  }, {\n    key: \"_isFocusWithinDrawer\",\n    value: function _isFocusWithinDrawer() {\n      var _a;\n\n      var activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n      return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n\n      this._updateFocusTrapState();\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n      // drawers that are open by default. When we're on the server, we shouldn't enable the\n      // animations, because we don't want the drawer to animate the first time the user sees\n      // the page.\n      if (this._platform.isBrowser) {\n        this._enableAnimations = true;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._focusTrap) {\n        this._focusTrap.destroy();\n      }\n\n      this._animationStarted.complete();\n\n      this._animationEnd.complete();\n\n      this._modeChanged.complete();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(openedVia) {\n      return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n\n  }, {\n    key: \"_closeViaBackdropClick\",\n    value: function _closeViaBackdropClick() {\n      // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n      // don't need to check whether focus is currently in the drawer, as clicking on the\n      // backdrop causes blurring of the active element.\n      return this._setOpen(\n      /* isOpen */\n      false,\n      /* restoreFocus */\n      true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var isOpen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.opened;\n      var openedVia = arguments.length > 1 ? arguments[1] : undefined;\n      // If the focus is currently inside the drawer content and we are closing the drawer,\n      // restore the focus to the initially focused element (when the drawer opened).\n      return this._setOpen(isOpen,\n      /* restoreFocus */\n      !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n\n  }, {\n    key: \"_setOpen\",\n    value: function _setOpen(isOpen, restoreFocus) {\n      var _this5 = this;\n\n      var openedVia = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'program';\n      this._opened = isOpen;\n\n      if (isOpen) {\n        this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        this._openedVia = openedVia;\n      } else {\n        this._animationState = 'void';\n\n        if (restoreFocus) {\n          this._restoreFocus();\n        }\n      }\n\n      this._updateFocusTrapState();\n\n      return new Promise(function (resolve) {\n        _this5.openedChange.pipe(take(1)).subscribe(function (open) {\n          return resolve(open ? 'open' : 'close');\n        });\n      });\n    }\n  }, {\n    key: \"_getWidth\",\n    value: function _getWidth() {\n      return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n\n  }, {\n    key: \"_updateFocusTrapState\",\n    value: function _updateFocusTrapState() {\n      if (this._focusTrap) {\n        // The focus trap is only enabled when the drawer is open in any mode other than side.\n        this._focusTrap.enabled = this.opened && this.mode !== 'side';\n      }\n    } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n\n  }, {\n    key: \"_animationStartListener\",\n    value: function _animationStartListener(event) {\n      this._animationStarted.next(event);\n    } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n\n  }, {\n    key: \"_animationDoneListener\",\n    value: function _animationDoneListener(event) {\n      this._animationEnd.next(event);\n    }\n  }]);\n\n  return MatDrawer;\n}();\n\nMatDrawer.ɵfac = function MatDrawer_Factory(t) {\n  return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8));\n};\n\nMatDrawer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawer,\n  selectors: [[\"mat-drawer\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n  hostVars: 12,\n  hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStartListener($event);\n      })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationDoneListener($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    }\n  },\n  inputs: {\n    position: \"position\",\n    mode: \"mode\",\n    disableClose: \"disableClose\",\n    autoFocus: \"autoFocus\",\n    opened: \"opened\"\n  },\n  outputs: {\n    openedChange: \"openedChange\",\n    _openedStream: \"opened\",\n    openedStart: \"openedStart\",\n    _closedStream: \"closed\",\n    closedStart: \"closedStart\",\n    onPositionChanged: \"positionChanged\"\n  },\n  exportAs: [\"matDrawer\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n  template: function MatDrawer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  directives: [ɵngcc1.CdkScrollable],\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\n\nMatDrawer.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: FocusTrapFactory\n  }, {\n    type: FocusMonitor\n  }, {\n    type: Platform\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: MatDrawerContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DRAWER_CONTAINER]\n    }]\n  }];\n};\n\nMatDrawer.propDecorators = {\n  position: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  disableClose: [{\n    type: Input\n  }],\n  autoFocus: [{\n    type: Input\n  }],\n  opened: [{\n    type: Input\n  }],\n  _animationState: [{\n    type: HostBinding,\n    args: ['@transform']\n  }],\n  openedChange: [{\n    type: Output\n  }],\n  _openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  openedStart: [{\n    type: Output\n  }],\n  _closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  closedStart: [{\n    type: Output\n  }],\n  onPositionChanged: [{\n    type: Output,\n    args: ['positionChanged']\n  }],\n  _animationStartListener: [{\n    type: HostListener,\n    args: ['@transform.start', ['$event']]\n  }],\n  _animationDoneListener: [{\n    type: HostListener,\n    args: ['@transform.done', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        'tabIndex': '-1'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.FocusTrapFactory\n    }, {\n      type: ɵngcc2.FocusMonitor\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DRAWER_CONTAINER]\n      }]\n    }];\n  }, {\n    _animationState: [{\n      type: HostBinding,\n      args: ['@transform']\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n      type: HostListener,\n      args: ['@transform.start', ['$event']]\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n      type: HostListener,\n      args: ['@transform.done', ['$event']]\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\n\n\nvar MatDrawerContainer = /*#__PURE__*/function () {\n  function MatDrawerContainer(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler) {\n    var _this6 = this;\n\n    var defaultAutosize = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n    var _animationMode = arguments.length > 6 ? arguments[6] : undefined;\n\n    _classCallCheck(this, MatDrawerContainer);\n\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** Drawers that belong to this container. */\n\n    this._drawers = new QueryList();\n    /** Event emitted when the drawer backdrop is clicked. */\n\n    this.backdropClick = new EventEmitter();\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject(); // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(function () {\n        _this6._validateDrawers();\n\n        _this6.updateContentMargins();\n      });\n    } // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n\n\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(function () {\n      return _this6.updateContentMargins();\n    });\n    this._autosize = defaultAutosize;\n  }\n  /** The drawer child with the `start` position. */\n\n\n  _createClass(MatDrawerContainer, [{\n    key: \"start\",\n    get: function get() {\n      return this._start;\n    }\n    /** The drawer child with the `end` position. */\n\n  }, {\n    key: \"end\",\n    get: function get() {\n      return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n\n  }, {\n    key: \"autosize\",\n    get: function get() {\n      return this._autosize;\n    },\n    set: function set(value) {\n      this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n\n  }, {\n    key: \"hasBackdrop\",\n    get: function get() {\n      if (this._backdropOverride == null) {\n        return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n      }\n\n      return this._backdropOverride;\n    },\n    set: function set(value) {\n      this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n\n  }, {\n    key: \"scrollable\",\n    get: function get() {\n      return this._userContent || this._content;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this7 = this;\n\n      this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(function (drawer) {\n        _this7._drawers.reset(drawer.filter(function (item) {\n          return !item._container || item._container === _this7;\n        }));\n\n        _this7._drawers.notifyOnChanges();\n      });\n\n      this._drawers.changes.pipe(startWith(null)).subscribe(function () {\n        _this7._validateDrawers();\n\n        _this7._drawers.forEach(function (drawer) {\n          _this7._watchDrawerToggle(drawer);\n\n          _this7._watchDrawerPosition(drawer);\n\n          _this7._watchDrawerMode(drawer);\n        });\n\n        if (!_this7._drawers.length || _this7._isDrawerOpen(_this7._start) || _this7._isDrawerOpen(_this7._end)) {\n          _this7.updateContentMargins();\n        }\n\n        _this7._changeDetectorRef.markForCheck();\n      }); // Avoid hitting the NgZone through the debounce timeout.\n\n\n      this._ngZone.runOutsideAngular(function () {\n        _this7._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(_this7._destroyed)).subscribe(function () {\n          return _this7.updateContentMargins();\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._contentMarginChanges.complete();\n\n      this._doCheckSubject.complete();\n\n      this._drawers.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      this._drawers.forEach(function (drawer) {\n        return drawer.open();\n      });\n    }\n    /** Calls `close` of both start and end drawers */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._drawers.forEach(function (drawer) {\n        return drawer.close();\n      });\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n\n  }, {\n    key: \"updateContentMargins\",\n    value: function updateContentMargins() {\n      var _this8 = this;\n\n      // 1. For drawers in `over` mode, they don't affect the content.\n      // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n      //    left margin (for left drawer) or right margin (for right the drawer).\n      // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n      //    adding to the left or right margin and simultaneously subtracting the same amount of\n      //    margin from the other side.\n      var left = 0;\n      var right = 0;\n\n      if (this._left && this._left.opened) {\n        if (this._left.mode == 'side') {\n          left += this._left._getWidth();\n        } else if (this._left.mode == 'push') {\n          var width = this._left._getWidth();\n\n          left += width;\n          right -= width;\n        }\n      }\n\n      if (this._right && this._right.opened) {\n        if (this._right.mode == 'side') {\n          right += this._right._getWidth();\n        } else if (this._right.mode == 'push') {\n          var _width = this._right._getWidth();\n\n          right += _width;\n          left -= _width;\n        }\n      } // If either `right` or `left` is zero, don't set a style to the element. This\n      // allows users to specify a custom size via CSS class in SSR scenarios where the\n      // measured widths will always be zero. Note that we reset to `null` here, rather\n      // than below, in order to ensure that the types in the `if` below are consistent.\n\n\n      left = left || null;\n      right = right || null;\n\n      if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n        this._contentMargins = {\n          left: left,\n          right: right\n        }; // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n        // to do it only when something changed, otherwise we can end up hitting the zone too often.\n\n        this._ngZone.run(function () {\n          return _this8._contentMarginChanges.next(_this8._contentMargins);\n        });\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      var _this9 = this;\n\n      // If users opted into autosizing, do a check every change detection cycle.\n      if (this._autosize && this._isPushed()) {\n        // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(function () {\n          return _this9._doCheckSubject.next();\n        });\n      }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n\n  }, {\n    key: \"_watchDrawerToggle\",\n    value: function _watchDrawerToggle(drawer) {\n      var _this10 = this;\n\n      drawer._animationStarted.pipe(filter(function (event) {\n        return event.fromState !== event.toState;\n      }), takeUntil(this._drawers.changes)).subscribe(function (event) {\n        // Set the transition class on the container so that the animations occur. This should not\n        // be set initially because animations should only be triggered via a change in state.\n        if (event.toState !== 'open-instant' && _this10._animationMode !== 'NoopAnimations') {\n          _this10._element.nativeElement.classList.add('mat-drawer-transition');\n        }\n\n        _this10.updateContentMargins();\n\n        _this10._changeDetectorRef.markForCheck();\n      });\n\n      if (drawer.mode !== 'side') {\n        drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(function () {\n          return _this10._setContainerClass(drawer.opened);\n        });\n      }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n\n  }, {\n    key: \"_watchDrawerPosition\",\n    value: function _watchDrawerPosition(drawer) {\n      var _this11 = this;\n\n      if (!drawer) {\n        return;\n      } // NOTE: We need to wait for the microtask queue to be empty before validating,\n      // since both drawers may be swapping positions at the same time.\n\n\n      drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(function () {\n        _this11._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(function () {\n          _this11._validateDrawers();\n        });\n      });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n\n  }, {\n    key: \"_watchDrawerMode\",\n    value: function _watchDrawerMode(drawer) {\n      var _this12 = this;\n\n      if (drawer) {\n        drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(function () {\n          _this12.updateContentMargins();\n\n          _this12._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n\n  }, {\n    key: \"_setContainerClass\",\n    value: function _setContainerClass(isAdd) {\n      var classList = this._element.nativeElement.classList;\n      var className = 'mat-drawer-container-has-open';\n\n      if (isAdd) {\n        classList.add(className);\n      } else {\n        classList.remove(className);\n      }\n    }\n    /** Validate the state of the drawer children components. */\n\n  }, {\n    key: \"_validateDrawers\",\n    value: function _validateDrawers() {\n      var _this13 = this;\n\n      this._start = this._end = null; // Ensure that we have at most one start and one end drawer.\n\n      this._drawers.forEach(function (drawer) {\n        if (drawer.position == 'end') {\n          if (_this13._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDuplicatedDrawerError('end');\n          }\n\n          _this13._end = drawer;\n        } else {\n          if (_this13._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDuplicatedDrawerError('start');\n          }\n\n          _this13._start = drawer;\n        }\n      });\n\n      this._right = this._left = null; // Detect if we're LTR or RTL.\n\n      if (this._dir && this._dir.value === 'rtl') {\n        this._left = this._end;\n        this._right = this._start;\n      } else {\n        this._left = this._start;\n        this._right = this._end;\n      }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n\n  }, {\n    key: \"_isPushed\",\n    value: function _isPushed() {\n      return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n    }\n  }, {\n    key: \"_onBackdropClicked\",\n    value: function _onBackdropClicked() {\n      this.backdropClick.emit();\n\n      this._closeModalDrawersViaBackdrop();\n    }\n  }, {\n    key: \"_closeModalDrawersViaBackdrop\",\n    value: function _closeModalDrawersViaBackdrop() {\n      var _this14 = this;\n\n      // Close all open drawers where closing is not disabled and the mode is not `side`.\n      [this._start, this._end].filter(function (drawer) {\n        return drawer && !drawer.disableClose && _this14._canHaveBackdrop(drawer);\n      }).forEach(function (drawer) {\n        return drawer._closeViaBackdropClick();\n      });\n    }\n  }, {\n    key: \"_isShowingBackdrop\",\n    value: function _isShowingBackdrop() {\n      return this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start) || this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end);\n    }\n  }, {\n    key: \"_canHaveBackdrop\",\n    value: function _canHaveBackdrop(drawer) {\n      return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n  }, {\n    key: \"_isDrawerOpen\",\n    value: function _isDrawerOpen(drawer) {\n      return drawer != null && drawer.opened;\n    }\n  }]);\n\n  return MatDrawerContainer;\n}();\n\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) {\n  return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContainer,\n  selectors: [[\"mat-drawer-container\"]],\n  contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    }\n  },\n  viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\"],\n  hostVars: 2,\n  hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  inputs: {\n    autosize: \"autosize\",\n    hasBackdrop: \"hasBackdrop\"\n  },\n  outputs: {\n    backdropClick: \"backdropClick\"\n  },\n  exportAs: [\"matDrawerContainer\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_DRAWER_CONTAINER,\n    useExisting: MatDrawerContainer\n  }])],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n  template: function MatDrawerContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  directives: [ɵngcc5.NgIf, MatDrawerContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatDrawerContainer.ctorParameters = function () {\n  return [{\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatDrawerContainer.propDecorators = {\n  _allDrawers: [{\n    type: ContentChildren,\n    args: [MatDrawer, {\n      // We need to use `descendants: true`, because Ivy will no longer match\n      // indirect descendants if it's left as false.\n      descendants: true\n    }]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatDrawerContent]\n  }],\n  _userContent: [{\n    type: ViewChild,\n    args: [MatDrawerContent]\n  }],\n  autosize: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  backdropClick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.ViewportRuler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backdropClick: [{\n      type: Output\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatSidenavContent = /*#__PURE__*/function (_MatDrawerContent) {\n  _inherits(MatSidenavContent, _MatDrawerContent);\n\n  var _super2 = _createSuper(MatSidenavContent);\n\n  function MatSidenavContent(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    _classCallCheck(this, MatSidenavContent);\n\n    return _super2.call(this, changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n\n  return MatSidenavContent;\n}(MatDrawerContent);\n\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) {\n  return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return MatSidenavContainer;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatSidenavContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContent,\n  selectors: [[\"mat-sidenav-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n  hostVars: 4,\n  hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSidenavContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatSidenavContent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: MatSidenavContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return MatSidenavContainer;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ScrollDispatcher\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSidenavContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return MatSidenavContainer;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nvar MatSidenav = /*#__PURE__*/function (_MatDrawer) {\n  _inherits(MatSidenav, _MatDrawer);\n\n  var _super3 = _createSuper(MatSidenav);\n\n  function MatSidenav() {\n    var _this15;\n\n    _classCallCheck(this, MatSidenav);\n\n    _this15 = _super3.apply(this, arguments);\n    _this15._fixedInViewport = false;\n    _this15._fixedTopGap = 0;\n    _this15._fixedBottomGap = 0;\n    return _this15;\n  }\n  /** Whether the sidenav is fixed in the viewport. */\n\n\n  _createClass(MatSidenav, [{\n    key: \"fixedInViewport\",\n    get: function get() {\n      return this._fixedInViewport;\n    },\n    set: function set(value) {\n      this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n\n  }, {\n    key: \"fixedTopGap\",\n    get: function get() {\n      return this._fixedTopGap;\n    },\n    set: function set(value) {\n      this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n\n  }, {\n    key: \"fixedBottomGap\",\n    get: function get() {\n      return this._fixedBottomGap;\n    },\n    set: function set(value) {\n      this._fixedBottomGap = coerceNumberProperty(value);\n    }\n  }]);\n\n  return MatSidenav;\n}(MatDrawer);\n\nMatSidenav.ɵfac = /*@__PURE__*/function () {\n  var ɵMatSidenav_BaseFactory;\n  return function MatSidenav_Factory(t) {\n    return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n  };\n}();\n\nMatSidenav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenav,\n  selectors: [[\"mat-sidenav\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n  hostVars: 17,\n  hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    }\n  },\n  inputs: {\n    fixedInViewport: \"fixedInViewport\",\n    fixedTopGap: \"fixedTopGap\",\n    fixedBottomGap: \"fixedBottomGap\"\n  },\n  exportAs: [\"matSidenav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n  template: function MatSidenav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  directives: [ɵngcc1.CdkScrollable],\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\nMatSidenav.propDecorators = {\n  fixedInViewport: [{\n    type: Input\n  }],\n  fixedTopGap: [{\n    type: Input\n  }],\n  fixedBottomGap: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\n\nvar MatSidenavContainer = /*#__PURE__*/function (_MatDrawerContainer) {\n  _inherits(MatSidenavContainer, _MatDrawerContainer);\n\n  var _super4 = _createSuper(MatSidenavContainer);\n\n  function MatSidenavContainer() {\n    _classCallCheck(this, MatSidenavContainer);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return MatSidenavContainer;\n}(MatDrawerContainer);\n\nMatSidenavContainer.ɵfac = /*@__PURE__*/function () {\n  var ɵMatSidenavContainer_BaseFactory;\n  return function MatSidenavContainer_Factory(t) {\n    return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n  };\n}();\n\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContainer,\n  selectors: [[\"mat-sidenav-container\"]],\n  contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n  hostVars: 2,\n  hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  exportAs: [\"matSidenavContainer\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_DRAWER_CONTAINER,\n    useExisting: MatSidenavContainer\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]],\n  template: function MatSidenavContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSidenavContainer.propDecorators = {\n  _allDrawers: [{\n    type: ContentChildren,\n    args: [MatSidenav, {\n      // We need to use `descendants: true`, because Ivy will no longer match\n      // indirect descendants if it's left as false.\n      descendants: true\n    }]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatSidenavContent]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatSidenavModule = function MatSidenavModule() {\n  _classCallCheck(this, MatSidenavModule);\n};\n\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) {\n  return new (t || MatSidenavModule)();\n};\n\nMatSidenavModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSidenavModule\n});\nMatSidenavModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], CdkScrollableModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      declarations: [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, {\n    declarations: function declarations() {\n      return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule];\n    },\n    exports: function exports() {\n      return [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a }; //# sourceMappingURL=sidenav.js.map","map":{"version":3,"sources":["/home/user/Documents/local/lekariproj/lekarife/node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js"],"names":["Platform","PlatformModule","CdkScrollable","ScrollDispatcher","ViewportRuler","CdkScrollableModule","DOCUMENT","CommonModule","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","Inject","forwardRef","ElementRef","NgZone","EventEmitter","Optional","Input","HostBinding","Output","HostListener","QueryList","ContentChildren","ContentChild","ViewChild","NgModule","MatCommonModule","FocusTrapFactory","FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","Subject","fromEvent","merge","filter","map","mapTo","takeUntil","distinctUntilChanged","take","startWith","debounceTime","trigger","state","style","transition","animate","ANIMATION_MODULE_TYPE","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_div_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","_onBackdropClicked","ɵɵelementEnd","ctx_r0","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","ɵɵprojection","_c1","_c2","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","_c5","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","ɵɵdirectiveInject","MatDrawerContainer","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ctorParameters","decorators","args","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","pipe","o","openedStart","e","fromState","toState","indexOf","undefined","_closedStream","closedStart","_destroyed","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","runOutsideAngular","nativeElement","event","keyCode","disableClose","run","close","stopPropagation","preventDefault","x","y","emit","value","_updateFocusTrapState","next","_autoFocus","mode","toggle","autoFocus","_focusTrap","focusInitialElementWhenReady","then","hasMovedFocus","focus","focusVia","_openedVia","blur","_a","activeEl","contains","create","isBrowser","destroy","complete","openedVia","_setOpen","isOpen","restoreFocus","Promise","resolve","open","offsetWidth","enabled","MatDrawer_Factory","MatDrawer_HostBindings","ɵɵsyntheticHostListener","MatDrawer_animation_transform_start_HostBindingHandler","$event","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","ɵɵattribute","ɵɵsyntheticHostProperty","inputs","outputs","exportAs","consts","MatDrawer_Template","directives","data","animation","propDecorators","animations","_dir","_element","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_content","_allDrawers","changes","drawer","reset","item","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_left","_getWidth","width","_right","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","isAdd","className","remove","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_closeViaBackdropClick","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatDrawerContainer_Query","ɵɵviewQuery","MatDrawerContainer_HostBindings","autosize","hasBackdrop","ɵɵProvidersFeature","provide","useExisting","MatDrawerContainer_Template","ɵɵtemplate","ɵɵproperty","ɵɵadvance","NgIf","styles","String","descendants","providers","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","ɵɵgetInheritedFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵangular_material_src_material_sidenav_sidenav_a"],"mappings":"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","sourcesContent":["import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, directives: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenav_BaseFactory; return function MatSidenav_Factory(t) { return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav); }; }();\nMatSidenav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, directives: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenavContainer_BaseFactory; return function MatSidenavContainer_Factory(t) { return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer); }; }();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); };\nMatSidenavModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ], CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map"]},"metadata":{},"sourceType":"module"}