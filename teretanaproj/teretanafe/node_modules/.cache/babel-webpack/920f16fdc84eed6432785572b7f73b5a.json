{"ast":null,"code":"import _createClass from \"/home/user/Documents/local/teretanaproj/teretanafe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/user/Documents/local/teretanaproj/teretanafe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/user/Documents/local/teretanaproj/teretanafe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/local/teretanaproj/teretanafe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/user/Documents/local/teretanaproj/teretanafe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/user/Documents/local/teretanaproj/teretanafe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\nvar _c0 = [\"body\"];\n\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\n\nvar _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nvar _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\n\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\n\nvar _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nvar _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nvar MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\n\nvar EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\n\nvar matExpansionAnimations = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed, void', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed, void', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('expanded', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\n\nvar MatExpansionPanelContent = function MatExpansionPanelContent(_template) {\n  _classCallCheck(this, MatExpansionPanelContent);\n\n  this._template = _template;\n};\n\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) {\n  return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelContent,\n  selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n});\n\nMatExpansionPanelContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Counter for generating unique element ids. */\n\n\nvar uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\n\nvar MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nvar ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\n\nvar MatExpansionPanel = /*#__PURE__*/function (_CdkAccordionItem) {\n  _inherits(MatExpansionPanel, _CdkAccordionItem);\n\n  var _super = _createSuper(MatExpansionPanel);\n\n  function MatExpansionPanel(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n    var _this;\n\n    _classCallCheck(this, MatExpansionPanel);\n\n    _this = _super.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    _this._viewContainerRef = _viewContainerRef;\n    _this._animationMode = _animationMode;\n    _this._hideToggle = false;\n    /** An event emitted after the body's expansion animation happens. */\n\n    _this.afterExpand = new EventEmitter();\n    /** An event emitted after the body's collapse animation happens. */\n\n    _this.afterCollapse = new EventEmitter();\n    /** Stream that emits for changes in `@Input` properties. */\n\n    _this._inputChanges = new Subject();\n    /** ID for the associated header element. Used for a11y labelling. */\n\n    _this._headerId = \"mat-expansion-panel-header-\".concat(uniqueId++);\n    /** Stream of body animation done events. */\n\n    _this._bodyAnimationDone = new Subject();\n    _this.accordion = accordion;\n    _this._document = _document; // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n\n    _this._bodyAnimationDone.pipe(distinctUntilChanged(function (x, y) {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(function (event) {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          _this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          _this.afterCollapse.emit();\n        }\n      }\n    });\n\n    if (defaultOptions) {\n      _this.hideToggle = defaultOptions.hideToggle;\n    }\n\n    return _this;\n  }\n  /** Whether the toggle indicator should be hidden. */\n\n\n  _createClass(MatExpansionPanel, [{\n    key: \"hideToggle\",\n    get: function get() {\n      return this._hideToggle || this.accordion && this.accordion.hideToggle;\n    },\n    set: function set(value) {\n      this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n\n  }, {\n    key: \"togglePosition\",\n    get: function get() {\n      return this._togglePosition || this.accordion && this.accordion.togglePosition;\n    },\n    set: function set(value) {\n      this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n\n  }, {\n    key: \"_hasSpacing\",\n    value: function _hasSpacing() {\n      if (this.accordion) {\n        return this.expanded && this.accordion.displayMode === 'default';\n      }\n\n      return false;\n    }\n    /** Gets the expanded state string. */\n\n  }, {\n    key: \"_getExpandedState\",\n    value: function _getExpandedState() {\n      return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.expanded = true;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      if (this._lazyContent) {\n        // Render the content as soon as the panel becomes open.\n        this.opened.pipe(startWith(null), filter(function () {\n          return _this2.expanded && !_this2._portal;\n        }), take(1)).subscribe(function () {\n          _this2._portal = new TemplatePortal(_this2._lazyContent._template, _this2._viewContainerRef);\n        });\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._inputChanges.next(changes);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(MatExpansionPanel.prototype), \"ngOnDestroy\", this).call(this);\n\n      this._bodyAnimationDone.complete();\n\n      this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n\n  }, {\n    key: \"_containsFocus\",\n    value: function _containsFocus() {\n      if (this._body) {\n        var focusedElement = this._document.activeElement;\n        var bodyElement = this._body.nativeElement;\n        return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n      }\n\n      return false;\n    }\n  }]);\n\n  return MatExpansionPanel;\n}(CdkAccordionItem);\n\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) {\n  return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n};\n\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanel,\n  selectors: [[\"mat-expansion-panel\"]],\n  contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    }\n  },\n  viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-expansion-panel\"],\n  hostVars: 6,\n  hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    expanded: \"expanded\",\n    hideToggle: \"hideToggle\",\n    togglePosition: \"togglePosition\"\n  },\n  outputs: {\n    opened: \"opened\",\n    closed: \"closed\",\n    expandedChange: \"expandedChange\",\n    afterExpand: \"afterExpand\",\n    afterCollapse: \"afterCollapse\"\n  },\n  exportAs: [\"matExpansionPanel\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n  // to the same accordion.\n  {\n    provide: MAT_ACCORDION,\n    useValue: ɵ0\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n  template: function MatExpansionPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n        return ctx._bodyAnimationDone.next($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    }\n  },\n  directives: [ɵngcc2.CdkPortalOutlet],\n  styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.bodyExpansion]\n  },\n  changeDetection: 0\n});\n\nMatExpansionPanel.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [MAT_ACCORDION]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: UniqueSelectionDispatcher\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nMatExpansionPanel.propDecorators = {\n  hideToggle: [{\n    type: Input\n  }],\n  togglePosition: [{\n    type: Input\n  }],\n  afterExpand: [{\n    type: Output\n  }],\n  afterCollapse: [{\n    type: Output\n  }],\n  _lazyContent: [{\n    type: ContentChild,\n    args: [MatExpansionPanelContent]\n  }],\n  _body: [{\n    type: ViewChild,\n    args: ['body']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled', 'expanded'],\n      outputs: ['opened', 'closed', 'expandedChange'],\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [// Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: ɵ0\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      },\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [MAT_ACCORDION]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    togglePosition: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }]\n  });\n})();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\n\n\nvar MatExpansionPanelActionRow = function MatExpansionPanelActionRow() {\n  _classCallCheck(this, MatExpansionPanelActionRow);\n};\n\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n  return new (t || MatExpansionPanelActionRow)();\n};\n\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelActionRow,\n  selectors: [[\"mat-action-row\"]],\n  hostAttrs: [1, \"mat-action-row\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n\n/** @docs-private */\n\n\nvar MatExpansionPanelHeaderBase = function MatExpansionPanelHeaderBase() {\n  _classCallCheck(this, MatExpansionPanelHeaderBase);\n};\n\nvar _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\n\n\nvar MatExpansionPanelHeader = /*#__PURE__*/function (_MatExpansionPanelHea) {\n  _inherits(MatExpansionPanelHeader, _MatExpansionPanelHea);\n\n  var _super2 = _createSuper(MatExpansionPanelHeader);\n\n  function MatExpansionPanelHeader(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n    var _this3;\n\n    _classCallCheck(this, MatExpansionPanelHeader);\n\n    _this3 = _super2.call(this);\n    _this3.panel = panel;\n    _this3._element = _element;\n    _this3._focusMonitor = _focusMonitor;\n    _this3._changeDetectorRef = _changeDetectorRef;\n    _this3._animationMode = _animationMode;\n    _this3._parentChangeSubscription = Subscription.EMPTY;\n    var accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(function (changes) {\n      return !!(changes['hideToggle'] || changes['togglePosition']);\n    })) : EMPTY;\n    _this3.tabIndex = parseInt(tabIndex || '') || 0; // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n\n    _this3._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(function (changes) {\n      return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n    }))).subscribe(function () {\n      return _this3._changeDetectorRef.markForCheck();\n    }); // Avoids focus being lost if the panel contained the focused element and was closed.\n\n    panel.closed.pipe(filter(function () {\n      return panel._containsFocus();\n    })).subscribe(function () {\n      return _focusMonitor.focusVia(_element, 'program');\n    });\n\n    if (defaultOptions) {\n      _this3.expandedHeight = defaultOptions.expandedHeight;\n      _this3.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n\n    return _this3;\n  }\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * @docs-private\n   */\n\n\n  _createClass(MatExpansionPanelHeader, [{\n    key: \"disabled\",\n    get: function get() {\n      return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n\n  }, {\n    key: \"_toggle\",\n    value: function _toggle() {\n      if (!this.disabled) {\n        this.panel.toggle();\n      }\n    }\n    /** Gets whether the panel is expanded. */\n\n  }, {\n    key: \"_isExpanded\",\n    value: function _isExpanded() {\n      return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n\n  }, {\n    key: \"_getExpandedState\",\n    value: function _getExpandedState() {\n      return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n\n  }, {\n    key: \"_getPanelId\",\n    value: function _getPanelId() {\n      return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n\n  }, {\n    key: \"_getTogglePosition\",\n    value: function _getTogglePosition() {\n      return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n\n  }, {\n    key: \"_showToggle\",\n    value: function _showToggle() {\n      return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n\n  }, {\n    key: \"_getHeaderHeight\",\n    value: function _getHeaderHeight() {\n      var isExpanded = this._isExpanded();\n\n      if (isExpanded && this.expandedHeight) {\n        return this.expandedHeight;\n      } else if (!isExpanded && this.collapsedHeight) {\n        return this.collapsedHeight;\n      }\n\n      return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n\n  }, {\n    key: \"_keydown\",\n    value: function _keydown(event) {\n      switch (event.keyCode) {\n        // Toggle for space and enter keys.\n        case SPACE:\n        case ENTER:\n          if (!hasModifierKey(event)) {\n            event.preventDefault();\n\n            this._toggle();\n          }\n\n          break;\n\n        default:\n          if (this.panel.accordion) {\n            this.panel.accordion._handleHeaderKeydown(event);\n          }\n\n          return;\n      }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus(origin, options) {\n      if (origin) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n      } else {\n        this._element.nativeElement.focus(options);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this4 = this;\n\n      this._focusMonitor.monitor(this._element).subscribe(function (origin) {\n        if (origin && _this4.panel.accordion) {\n          _this4.panel.accordion._handleHeaderFocus(_this4);\n        }\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._parentChangeSubscription.unsubscribe();\n\n      this._focusMonitor.stopMonitoring(this._element);\n    }\n  }]);\n\n  return MatExpansionPanelHeader;\n}(_MatExpansionPanelHeaderMixinBase);\n\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n  return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'));\n};\n\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatExpansionPanelHeader,\n  selectors: [[\"mat-expansion-panel-header\"]],\n  hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"],\n  hostVars: 15,\n  hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n        return ctx._toggle();\n      })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n      ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    expandedHeight: \"expandedHeight\",\n    collapsedHeight: \"collapsedHeight\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]],\n  template: function MatExpansionPanelHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    }\n  },\n  directives: [ɵngcc4.NgIf],\n  styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matExpansionAnimations.indicatorRotate]\n  },\n  changeDetection: 0\n});\n\nMatExpansionPanelHeader.ctorParameters = function () {\n  return [{\n    type: MatExpansionPanel,\n    decorators: [{\n      type: Host\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }];\n};\n\nMatExpansionPanelHeader.propDecorators = {\n  expandedHeight: [{\n    type: Input\n  }],\n  collapsedHeight: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['tabIndex'],\n      animations: [matExpansionAnimations.indicatorRotate],\n      host: {\n        'class': 'mat-expansion-panel-header mat-focus-indicator',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '[class.mat-expansion-toggle-indicator-after]': \"_getTogglePosition() === 'after'\",\n        '[class.mat-expansion-toggle-indicator-before]': \"_getTogglePosition() === 'before'\",\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[style.height]': '_getHeaderHeight()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)'\n      },\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: MatExpansionPanel,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\n\n\nvar MatExpansionPanelDescription = function MatExpansionPanelDescription() {\n  _classCallCheck(this, MatExpansionPanelDescription);\n};\n\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n  return new (t || MatExpansionPanelDescription)();\n};\n\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelDescription,\n  selectors: [[\"mat-panel-description\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\n\n\nvar MatExpansionPanelTitle = function MatExpansionPanelTitle() {\n  _classCallCheck(this, MatExpansionPanelTitle);\n};\n\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n  return new (t || MatExpansionPanelTitle)();\n};\n\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatExpansionPanelTitle,\n  selectors: [[\"mat-panel-title\"]],\n  hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Directive for a Material Design Accordion.\n */\n\n\nvar MatAccordion = /*#__PURE__*/function (_CdkAccordion) {\n  _inherits(MatAccordion, _CdkAccordion);\n\n  var _super3 = _createSuper(MatAccordion);\n\n  function MatAccordion() {\n    var _this5;\n\n    _classCallCheck(this, MatAccordion);\n\n    _this5 = _super3.apply(this, arguments);\n    /** Headers belonging to this accordion. */\n\n    _this5._ownHeaders = new QueryList();\n    _this5._hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n\n    _this5.displayMode = 'default';\n    /** The position of the expansion indicator. */\n\n    _this5.togglePosition = 'after';\n    return _this5;\n  }\n  /** Whether the expansion indicator should be hidden. */\n\n\n  _createClass(MatAccordion, [{\n    key: \"hideToggle\",\n    get: function get() {\n      return this._hideToggle;\n    },\n    set: function set(show) {\n      this._hideToggle = coerceBooleanProperty(show);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this6 = this;\n\n      this._headers.changes.pipe(startWith(this._headers)).subscribe(function (headers) {\n        _this6._ownHeaders.reset(headers.filter(function (header) {\n          return header.panel.accordion === _this6;\n        }));\n\n        _this6._ownHeaders.notifyOnChanges();\n      });\n\n      this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n\n  }, {\n    key: \"_handleHeaderKeydown\",\n    value: function _handleHeaderKeydown(event) {\n      this._keyManager.onKeydown(event);\n    }\n  }, {\n    key: \"_handleHeaderFocus\",\n    value: function _handleHeaderFocus(header) {\n      this._keyManager.updateActiveItem(header);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(MatAccordion.prototype), \"ngOnDestroy\", this).call(this);\n\n      this._ownHeaders.destroy();\n    }\n  }]);\n\n  return MatAccordion;\n}(CdkAccordion);\n\nMatAccordion.ɵfac = /*@__PURE__*/function () {\n  var ɵMatAccordion_BaseFactory;\n  return function MatAccordion_Factory(t) {\n    return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion);\n  };\n}();\n\nMatAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatAccordion,\n  selectors: [[\"mat-accordion\"]],\n  contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-accordion\"],\n  hostVars: 2,\n  hostBindings: function MatAccordion_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    }\n  },\n  inputs: {\n    multi: \"multi\",\n    displayMode: \"displayMode\",\n    togglePosition: \"togglePosition\",\n    hideToggle: \"hideToggle\"\n  },\n  exportAs: [\"matAccordion\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_ACCORDION,\n    useExisting: MatAccordion\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatAccordion.propDecorators = {\n  _headers: [{\n    type: ContentChildren,\n    args: [MatExpansionPanelHeader, {\n      descendants: true\n    }]\n  }],\n  hideToggle: [{\n    type: Input\n  }],\n  displayMode: [{\n    type: Input\n  }],\n  togglePosition: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      inputs: ['multi'],\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if multiple panel support is enabled.\n        '[class.mat-accordion-multi]': 'this.multi'\n      }\n    }]\n  }], null, {\n    displayMode: [{\n      type: Input\n    }],\n    togglePosition: [{\n      type: Input\n    }],\n    hideToggle: [{\n      type: Input\n    }],\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatExpansionModule = function MatExpansionModule() {\n  _classCallCheck(this, MatExpansionModule);\n};\n\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) {\n  return new (t || MatExpansionModule)();\n};\n\nMatExpansionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatExpansionModule\n});\nMatExpansionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      declarations: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, {\n    declarations: function declarations() {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule];\n    },\n    exports: function exports() {\n      return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 }; //# sourceMappingURL=expansion.js.map","map":{"version":3,"sources":["/home/user/Documents/local/teretanaproj/teretanafe/node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js"],"names":["CdkAccordionItem","CdkAccordion","CdkAccordionModule","TemplatePortal","PortalModule","DOCUMENT","CommonModule","InjectionToken","Directive","TemplateRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","SkipSelf","Inject","ChangeDetectorRef","ViewContainerRef","Input","Output","ContentChild","ViewChild","Host","ElementRef","Attribute","QueryList","ContentChildren","NgModule","mixinTabIndex","MatCommonModule","coerceBooleanProperty","FocusMonitor","FocusKeyManager","distinctUntilChanged","startWith","filter","take","ENTER","hasModifierKey","SPACE","ANIMATION_MODULE_TYPE","Subject","Subscription","EMPTY","merge","trigger","state","style","transition","animate","UniqueSelectionDispatcher","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","MatExpansionPanelHeader_span_4_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","_getExpandedState","_c3","_c4","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","ɵfac","MatExpansionPanelContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","ɵ0","undefined","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","subscribe","event","emit","hideToggle","value","_togglePosition","togglePosition","expanded","displayMode","_lazyContent","opened","_portal","changes","next","complete","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","_hasSpacing","inputs","disabled","outputs","closed","expandedChange","exportAs","features","ɵɵProvidersFeature","provide","useValue","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵlistener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","ɵɵtemplate","ɵɵelementEnd","ɵɵadvance","id","ɵɵattribute","directives","CdkPortalOutlet","styles","encapsulation","data","animation","changeDetection","decorators","String","propDecorators","None","OnPush","animations","providers","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeaderBase","_MatExpansionPanelHeaderMixinBase","MatExpansionPanelHeader","panel","_element","_focusMonitor","tabIndex","_parentChangeSubscription","accordionHideToggleChange","_stateChanges","parseInt","markForCheck","_containsFocus","focusVia","expandedHeight","collapsedHeight","toggle","isExpanded","_isExpanded","keyCode","preventDefault","_toggle","_handleHeaderKeydown","origin","options","focus","monitor","_handleHeaderFocus","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","ɵɵinjectAttribute","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","ɵɵstyleProp","_getHeaderHeight","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","destroy","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","multi","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n/** @docs-private */\nclass MatExpansionPanelHeaderBase {\n}\nconst _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader extends _MatExpansionPanelHeaderMixinBase {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        super();\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatExpansionPanelHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { tabIndex: \"tabIndex\", expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['tabIndex'],\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.ɵfac = /*@__PURE__*/ function () { let ɵMatAccordion_BaseFactory; return function MatAccordion_Factory(t) { return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion); }; }();\nMatAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n//# sourceMappingURL=expansion.js.map"]},"metadata":{},"sourceType":"module"}